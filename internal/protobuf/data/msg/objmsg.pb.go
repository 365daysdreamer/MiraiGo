// Code generated by yaprotoc. DO NOT EDIT.
// source: msg/objmsg.proto

package msg

import (
	"github.com/pkg/errors"
	"github.com/segmentio/encoding/proto"
)

type MsgContentInfo struct {
	ContentInfoId []byte   `protobuf:"bytes,1,opt"`
	MsgFile       *MsgFile `protobuf:"bytes,2,opt"`
}

func (x *MsgContentInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type MsgFile struct {
	BusId         int32  `protobuf:"varint,1,opt"`
	FilePath      []byte `protobuf:"bytes,2,opt"`
	FileSize      int64  `protobuf:"varint,3,opt"`
	FileName      string `protobuf:"bytes,4,opt"`
	Int64DeadTime int64  `protobuf:"varint,5,opt"`
	FileSha1      []byte `protobuf:"bytes,6,opt"`
	Ext           []byte `protobuf:"bytes,7,opt"`
}

func (x *MsgFile) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type MsgPic struct {
	SmallPicUrl    []byte `protobuf:"bytes,1,opt"`
	OriginalPicUrl []byte `protobuf:"bytes,2,opt"`
	LocalPicId     int32  `protobuf:"varint,3,opt"`
}

func (x *MsgPic) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ObjMsg struct {
	MsgType        int32             `protobuf:"varint,1,opt"`
	Title          []byte            `protobuf:"bytes,2,opt"`
	BytesAbstact   []byte            `protobuf:"bytes,3,opt"`
	TitleExt       []byte            `protobuf:"bytes,5,opt"`
	MsgPic         []*MsgPic         `protobuf:"bytes,6,rep"`
	MsgContentInfo []*MsgContentInfo `protobuf:"bytes,7,rep"`
	ReportIdShow   int32             `protobuf:"varint,8,opt"`
}

func (x *ObjMsg) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}
