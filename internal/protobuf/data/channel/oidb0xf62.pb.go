// Code generated by yaprotoc. DO NOT EDIT.
// source: channel/oidb0xf62.proto

package channel

import (
	"github.com/pkg/errors"
	"github.com/segmentio/encoding/proto"
)

type DF62ReqBody struct {
	Msg *ChannelMsgContent `protobuf:"bytes,1,opt"`
}

func (x *DF62ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type DF62RspBody struct {
	Result        *uint32               `protobuf:"varint,1,opt"`
	Errmsg        []byte                `protobuf:"bytes,2,opt"`
	SendTime      *uint32               `protobuf:"varint,3,opt"`
	Head          *ChannelMsgHead       `protobuf:"bytes,4,opt"`
	ErrType       *uint32               `protobuf:"varint,5,opt"`
	TransSvrInfo  *TransSvrInfo         `protobuf:"bytes,6,opt"`
	FreqLimitInfo *ChannelFreqLimitInfo `protobuf:"bytes,7,opt"`
}

func (x *DF62RspBody) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *DF62RspBody) GetSendTime() uint32 {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return 0
}

func (x *DF62RspBody) GetErrType() uint32 {
	if x != nil && x.ErrType != nil {
		return *x.ErrType
	}
	return 0
}

func (x *DF62RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type TransSvrInfo struct {
	SubType   *uint32 `protobuf:"varint,1,opt"`
	RetCode   *int32  `protobuf:"varint,2,opt"`
	ErrMsg    []byte  `protobuf:"bytes,3,opt"`
	TransInfo []byte  `protobuf:"bytes,4,opt"`
}

func (x *TransSvrInfo) GetSubType() uint32 {
	if x != nil && x.SubType != nil {
		return *x.SubType
	}
	return 0
}

func (x *TransSvrInfo) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *TransSvrInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}
