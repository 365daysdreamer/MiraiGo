// Code generated by yaprotoc. DO NOT EDIT.
// source: group_file_common/common.proto

package group_file_common

import (
	"github.com/pkg/errors"
	"github.com/segmentio/encoding/proto"
)

type FeedsInfo struct {
	BusId     *uint32 `protobuf:"varint,1,opt"`
	FileId    *string `protobuf:"bytes,2,opt"`
	MsgRandom *uint32 `protobuf:"varint,3,opt"`
	Ext       []byte  `protobuf:"bytes,4,opt"`
	FeedFlag  *uint32 `protobuf:"varint,5,opt"`
}

func (x *FeedsInfo) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *FeedsInfo) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *FeedsInfo) GetMsgRandom() uint32 {
	if x != nil && x.MsgRandom != nil {
		return *x.MsgRandom
	}
	return 0
}

func (x *FeedsInfo) GetFeedFlag() uint32 {
	if x != nil && x.FeedFlag != nil {
		return *x.FeedFlag
	}
	return 0
}

func (x *FeedsInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type FeedsResult struct {
	RetCode  *int32  `protobuf:"varint,1,opt"`
	Detail   *string `protobuf:"bytes,2,opt"`
	FileId   *string `protobuf:"bytes,3,opt"`
	BusId    *uint32 `protobuf:"varint,4,opt"`
	DeadTime *uint32 `protobuf:"varint,5,opt"`
}

func (x *FeedsResult) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *FeedsResult) GetDetail() string {
	if x != nil && x.Detail != nil {
		return *x.Detail
	}
	return ""
}

func (x *FeedsResult) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *FeedsResult) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *FeedsResult) GetDeadTime() uint32 {
	if x != nil && x.DeadTime != nil {
		return *x.DeadTime
	}
	return 0
}

func (x *FeedsResult) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type FileInfo struct {
	FileId         *string `protobuf:"bytes,1,opt"`
	FileName       *string `protobuf:"bytes,2,opt"`
	FileSize       *uint64 `protobuf:"varint,3,opt"`
	BusId          *uint32 `protobuf:"varint,4,opt"`
	UploadedSize   *uint64 `protobuf:"varint,5,opt"`
	UploadTime     *uint32 `protobuf:"varint,6,opt"`
	DeadTime       *uint32 `protobuf:"varint,7,opt"`
	ModifyTime     *uint32 `protobuf:"varint,8,opt"`
	DownloadTimes  *uint32 `protobuf:"varint,9,opt"`
	Sha            []byte  `protobuf:"bytes,10,opt"`
	Sha3           []byte  `protobuf:"bytes,11,opt"`
	Md5            []byte  `protobuf:"bytes,12,opt"`
	LocalPath      *string `protobuf:"bytes,13,opt"`
	UploaderName   *string `protobuf:"bytes,14,opt"`
	UploaderUin    *uint64 `protobuf:"varint,15,opt"`
	ParentFolderId *string `protobuf:"bytes,16,opt"`
	SafeType       *uint32 `protobuf:"varint,17,opt"`
	FileBlobExt    []byte  `protobuf:"bytes,20,opt"`
	OwnerUin       *uint64 `protobuf:"varint,21,opt"`
	FeedId         *string `protobuf:"bytes,22,opt"`
	ReservedField  []byte  `protobuf:"bytes,23,opt"`
}

func (x *FileInfo) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *FileInfo) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *FileInfo) GetFileSize() uint64 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *FileInfo) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *FileInfo) GetUploadedSize() uint64 {
	if x != nil && x.UploadedSize != nil {
		return *x.UploadedSize
	}
	return 0
}

func (x *FileInfo) GetUploadTime() uint32 {
	if x != nil && x.UploadTime != nil {
		return *x.UploadTime
	}
	return 0
}

func (x *FileInfo) GetDeadTime() uint32 {
	if x != nil && x.DeadTime != nil {
		return *x.DeadTime
	}
	return 0
}

func (x *FileInfo) GetModifyTime() uint32 {
	if x != nil && x.ModifyTime != nil {
		return *x.ModifyTime
	}
	return 0
}

func (x *FileInfo) GetDownloadTimes() uint32 {
	if x != nil && x.DownloadTimes != nil {
		return *x.DownloadTimes
	}
	return 0
}

func (x *FileInfo) GetLocalPath() string {
	if x != nil && x.LocalPath != nil {
		return *x.LocalPath
	}
	return ""
}

func (x *FileInfo) GetUploaderName() string {
	if x != nil && x.UploaderName != nil {
		return *x.UploaderName
	}
	return ""
}

func (x *FileInfo) GetUploaderUin() uint64 {
	if x != nil && x.UploaderUin != nil {
		return *x.UploaderUin
	}
	return 0
}

func (x *FileInfo) GetParentFolderId() string {
	if x != nil && x.ParentFolderId != nil {
		return *x.ParentFolderId
	}
	return ""
}

func (x *FileInfo) GetSafeType() uint32 {
	if x != nil && x.SafeType != nil {
		return *x.SafeType
	}
	return 0
}

func (x *FileInfo) GetOwnerUin() uint64 {
	if x != nil && x.OwnerUin != nil {
		return *x.OwnerUin
	}
	return 0
}

func (x *FileInfo) GetFeedId() string {
	if x != nil && x.FeedId != nil {
		return *x.FeedId
	}
	return ""
}

func (x *FileInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type FileInfoTmem struct {
	GroupCode *uint64     `protobuf:"varint,1,opt"`
	Files     []*FileInfo `protobuf:"bytes,2,rep"`
}

func (x *FileInfoTmem) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *FileInfoTmem) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type FileItem struct {
	Type       *uint32     `protobuf:"varint,1,opt"`
	FolderInfo *FolderInfo `protobuf:"bytes,2,opt"`
	FileInfo   *FileInfo   `protobuf:"bytes,3,opt"`
}

func (x *FileItem) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FileItem) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type FolderInfo struct {
	FolderId       *string `protobuf:"bytes,1,opt"`
	ParentFolderId *string `protobuf:"bytes,2,opt"`
	FolderName     *string `protobuf:"bytes,3,opt"`
	CreateTime     *uint32 `protobuf:"varint,4,opt"`
	ModifyTime     *uint32 `protobuf:"varint,5,opt"`
	CreateUin      *uint64 `protobuf:"varint,6,opt"`
	CreatorName    *string `protobuf:"bytes,7,opt"`
	TotalFileCount *uint32 `protobuf:"varint,8,opt"`
	ModifyUin      *uint64 `protobuf:"varint,9,opt"`
	ModifyName     *string `protobuf:"bytes,10,opt"`
	UsedSpace      *uint64 `protobuf:"varint,11,opt"`
}

func (x *FolderInfo) GetFolderId() string {
	if x != nil && x.FolderId != nil {
		return *x.FolderId
	}
	return ""
}

func (x *FolderInfo) GetParentFolderId() string {
	if x != nil && x.ParentFolderId != nil {
		return *x.ParentFolderId
	}
	return ""
}

func (x *FolderInfo) GetFolderName() string {
	if x != nil && x.FolderName != nil {
		return *x.FolderName
	}
	return ""
}

func (x *FolderInfo) GetCreateTime() uint32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *FolderInfo) GetModifyTime() uint32 {
	if x != nil && x.ModifyTime != nil {
		return *x.ModifyTime
	}
	return 0
}

func (x *FolderInfo) GetCreateUin() uint64 {
	if x != nil && x.CreateUin != nil {
		return *x.CreateUin
	}
	return 0
}

func (x *FolderInfo) GetCreatorName() string {
	if x != nil && x.CreatorName != nil {
		return *x.CreatorName
	}
	return ""
}

func (x *FolderInfo) GetTotalFileCount() uint32 {
	if x != nil && x.TotalFileCount != nil {
		return *x.TotalFileCount
	}
	return 0
}

func (x *FolderInfo) GetModifyUin() uint64 {
	if x != nil && x.ModifyUin != nil {
		return *x.ModifyUin
	}
	return 0
}

func (x *FolderInfo) GetModifyName() string {
	if x != nil && x.ModifyName != nil {
		return *x.ModifyName
	}
	return ""
}

func (x *FolderInfo) GetUsedSpace() uint64 {
	if x != nil && x.UsedSpace != nil {
		return *x.UsedSpace
	}
	return 0
}

func (x *FolderInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type FolderInfoTmem struct {
	GroupCode *uint64       `protobuf:"varint,1,opt"`
	Folders   []*FolderInfo `protobuf:"bytes,2,rep"`
}

func (x *FolderInfoTmem) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *FolderInfoTmem) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type OverwriteInfo struct {
	FileId        *string `protobuf:"bytes,1,opt"`
	DownloadTimes *uint32 `protobuf:"varint,2,opt"`
}

func (x *OverwriteInfo) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *OverwriteInfo) GetDownloadTimes() uint32 {
	if x != nil && x.DownloadTimes != nil {
		return *x.DownloadTimes
	}
	return 0
}

func (x *OverwriteInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}
