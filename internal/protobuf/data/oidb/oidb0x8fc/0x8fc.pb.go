// Code generated by yaprotoc. DO NOT EDIT.
// source: oidb\0x8fc.proto

package oidb0x8fc

import (
	"github.com/pkg/errors"
	"github.com/segmentio/encoding/proto"
)

type CardNameElem struct {
	EnumCardType *uint32 `protobuf:"varint,1,opt"`
	Value        []byte  `protobuf:"bytes,2,opt"`
}

func (x *CardNameElem) GetEnumCardType() uint32 {
	if x != nil && x.EnumCardType != nil {
		return *x.EnumCardType
	}
	return 0
}

func (x *CardNameElem) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ClientInfo struct {
	Implat    *uint32 `protobuf:"varint,1,opt"`
	Clientver *string `protobuf:"bytes,2,opt"`
}

func (x *ClientInfo) GetImplat() uint32 {
	if x != nil && x.Implat != nil {
		return *x.Implat
	}
	return 0
}

func (x *ClientInfo) GetClientver() string {
	if x != nil && x.Clientver != nil {
		return *x.Clientver
	}
	return ""
}

func (x *ClientInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type CommCardNameBuf struct {
	RichCardName []*RichCardNameElem `protobuf:"bytes,1,rep"`
	CoolId       *uint32             `protobuf:"varint,2,opt"`
}

func (x *CommCardNameBuf) GetCoolId() uint32 {
	if x != nil && x.CoolId != nil {
		return *x.CoolId
	}
	return 0
}

func (x *CommCardNameBuf) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type LevelName struct {
	Level *uint32 `protobuf:"varint,1,opt"`
	Name  *string `protobuf:"bytes,2,opt"`
}

func (x *LevelName) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *LevelName) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LevelName) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type MemberInfo struct {
	Uin                    *uint64         `protobuf:"varint,1,opt"`
	Point                  *uint32         `protobuf:"varint,2,opt"`
	ActiveDay              *uint32         `protobuf:"varint,3,opt"`
	Level                  *uint32         `protobuf:"varint,4,opt"`
	SpecialTitle           []byte          `protobuf:"bytes,5,opt"`
	SpecialTitleExpireTime *int32          `protobuf:"varint,6,opt"`
	UinName                []byte          `protobuf:"bytes,7,opt"`
	MemberCardName         []byte          `protobuf:"bytes,8,opt"`
	Phone                  []byte          `protobuf:"bytes,9,opt"`
	Email                  []byte          `protobuf:"bytes,10,opt"`
	Remark                 []byte          `protobuf:"bytes,11,opt"`
	Gender                 *uint32         `protobuf:"varint,12,opt"`
	Job                    []byte          `protobuf:"bytes,13,opt"`
	TribeLevel             *uint32         `protobuf:"varint,14,opt"`
	TribePoint             *uint32         `protobuf:"varint,15,opt"`
	RichCardName           []*CardNameElem `protobuf:"bytes,16,rep"`
	CommRichCardName       []byte          `protobuf:"bytes,17,opt"`
	RingtoneId             *uint32         `protobuf:"varint,18,opt"`
	GroupHonor             []byte          `protobuf:"bytes,19,opt"`
	CmduinFlagEx3Grocery   *uint32         `protobuf:"varint,20,opt"`
	CmduinFlagEx3Mask      *uint32         `protobuf:"varint,21,opt"`
}

func (x *MemberInfo) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *MemberInfo) GetPoint() uint32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *MemberInfo) GetActiveDay() uint32 {
	if x != nil && x.ActiveDay != nil {
		return *x.ActiveDay
	}
	return 0
}

func (x *MemberInfo) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *MemberInfo) GetSpecialTitleExpireTime() int32 {
	if x != nil && x.SpecialTitleExpireTime != nil {
		return *x.SpecialTitleExpireTime
	}
	return 0
}

func (x *MemberInfo) GetGender() uint32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *MemberInfo) GetTribeLevel() uint32 {
	if x != nil && x.TribeLevel != nil {
		return *x.TribeLevel
	}
	return 0
}

func (x *MemberInfo) GetTribePoint() uint32 {
	if x != nil && x.TribePoint != nil {
		return *x.TribePoint
	}
	return 0
}

func (x *MemberInfo) GetRingtoneId() uint32 {
	if x != nil && x.RingtoneId != nil {
		return *x.RingtoneId
	}
	return 0
}

func (x *MemberInfo) GetCmduinFlagEx3Grocery() uint32 {
	if x != nil && x.CmduinFlagEx3Grocery != nil {
		return *x.CmduinFlagEx3Grocery
	}
	return 0
}

func (x *MemberInfo) GetCmduinFlagEx3Mask() uint32 {
	if x != nil && x.CmduinFlagEx3Mask != nil {
		return *x.CmduinFlagEx3Mask
	}
	return 0
}

func (x *MemberInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ReqBody struct {
	GroupCode      *uint64       `protobuf:"varint,1,opt"`
	ShowFlag       *uint32       `protobuf:"varint,2,opt"`
	MemLevelInfo   []*MemberInfo `protobuf:"bytes,3,rep"`
	LevelName      []*LevelName  `protobuf:"bytes,4,rep"`
	UpdateTime     *uint32       `protobuf:"varint,5,opt"`
	OfficeMode     *uint32       `protobuf:"varint,6,opt"`
	GroupOpenAppid *uint32       `protobuf:"varint,7,opt"`
	ClientInfo     *ClientInfo   `protobuf:"bytes,8,opt"`
	AuthKey        []byte        `protobuf:"bytes,9,opt"`
	LevelNameNew   []*LevelName  `protobuf:"bytes,10,rep"`
}

func (x *ReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *ReqBody) GetShowFlag() uint32 {
	if x != nil && x.ShowFlag != nil {
		return *x.ShowFlag
	}
	return 0
}

func (x *ReqBody) GetUpdateTime() uint32 {
	if x != nil && x.UpdateTime != nil {
		return *x.UpdateTime
	}
	return 0
}

func (x *ReqBody) GetOfficeMode() uint32 {
	if x != nil && x.OfficeMode != nil {
		return *x.OfficeMode
	}
	return 0
}

func (x *ReqBody) GetGroupOpenAppid() uint32 {
	if x != nil && x.GroupOpenAppid != nil {
		return *x.GroupOpenAppid
	}
	return 0
}

func (x *ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type RichCardNameElem struct {
	Ctrl []byte `protobuf:"bytes,1,opt"`
	Text []byte `protobuf:"bytes,2,opt"`
}

func (x *RichCardNameElem) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type RspBody struct {
	GroupCode        *uint64 `protobuf:"varint,1,opt"`
	ErrInfo          *string `protobuf:"bytes,2,opt"`
	CoolGroupCardRsp []byte  `protobuf:"bytes,3,opt"`
}

func (x *RspBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *RspBody) GetErrInfo() string {
	if x != nil && x.ErrInfo != nil {
		return *x.ErrInfo
	}
	return ""
}

func (x *RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}
