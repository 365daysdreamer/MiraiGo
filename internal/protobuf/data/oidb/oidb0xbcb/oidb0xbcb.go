// Code generated by Proto2Go.Net. Only used for MiraiGo. DO NOT EDIT.
// Source: oidb0xbcb.proto

package oidb0xbcb

import (
	"github.com/pkg/errors"
	"go.dedis.ch/protobuf"
)

type (
	CheckUrlReq struct {
		Url         []string `protobuf:"1"`
		Refer       *string  `protobuf:"2,opt"`
		Plateform   *string  `protobuf:"3,opt"`
		QqPfTo      *string  `protobuf:"4,opt"`
		Type        *uint32  `protobuf:"5,opt"`
		From        *uint32  `protobuf:"6,opt"`
		Chatid      *uint64  `protobuf:"7,opt"`
		ServiceType *uint64  `protobuf:"8,opt"`
		SendUin     *uint64  `protobuf:"9,opt"`
		ReqType     *string  `protobuf:"10,opt"`
		OriginalUrl *string  `protobuf:"11,opt"`
		IsArk       *bool    `protobuf:"12,opt"`
		ArkName     *string  `protobuf:"13,opt"`
		IsFinish    *bool    `protobuf:"14,opt"`
		SrcUrls     []string `protobuf:"15"`
		SrcPlatform *uint32  `protobuf:"16,opt"`
		Qua         *string  `protobuf:"17,opt"`
	}

	CheckUrlReqItem struct {
		Url         *string `protobuf:"1,opt"`
		Refer       *string `protobuf:"2,opt"`
		Plateform   *string `protobuf:"3,opt"`
		QqPfTo      *string `protobuf:"4,opt"`
		Type        *uint32 `protobuf:"5,opt"`
		From        *uint32 `protobuf:"6,opt"`
		Chatid      *uint64 `protobuf:"7,opt"`
		ServiceType *uint64 `protobuf:"8,opt"`
		SendUin     *uint64 `protobuf:"9,opt"`
		ReqType     *string `protobuf:"10,opt"`
	}

	CheckUrlRsp struct {
		Results         []*UrlCheckResult `protobuf:"1"`
		NextReqDuration *uint32           `protobuf:"2,opt"`
	}

	ReqBody struct {
		NotUseCache *int32       `protobuf:"9,opt"`
		CheckUrlReq *CheckUrlReq `protobuf:"10,opt"`
	}

	RspBody struct {
		Wording     *string      `protobuf:"1,opt"`
		CheckUrlRsp *CheckUrlRsp `protobuf:"10,opt"`
	}

	UrlCheckResult struct {
		Url          *string `protobuf:"1,opt"`
		Result       *uint32 `protobuf:"2,opt"`
		JumpResult   *uint32 `protobuf:"3,opt"`
		JumpUrl      *string `protobuf:"4,opt"`
		Level        *uint32 `protobuf:"5,opt"`
		SubLevel     *uint32 `protobuf:"6,opt"`
		Umrtype      *uint32 `protobuf:"7,opt"`
		RetFrom      *uint32 `protobuf:"8,opt"`
		OperationBit *uint64 `protobuf:"9,opt"`
	}
)

func (x *CheckUrlReq) GetRefer() string {
	if x != nil && x.Refer != nil {
		return *x.Refer
	}
	return ""
}

func (x *CheckUrlReq) GetPlateform() string {
	if x != nil && x.Plateform != nil {
		return *x.Plateform
	}
	return ""
}

func (x *CheckUrlReq) GetQqPfTo() string {
	if x != nil && x.QqPfTo != nil {
		return *x.QqPfTo
	}
	return ""
}

func (x *CheckUrlReq) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CheckUrlReq) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *CheckUrlReq) GetChatid() uint64 {
	if x != nil && x.Chatid != nil {
		return *x.Chatid
	}
	return 0
}

func (x *CheckUrlReq) GetServiceType() uint64 {
	if x != nil && x.ServiceType != nil {
		return *x.ServiceType
	}
	return 0
}

func (x *CheckUrlReq) GetSendUin() uint64 {
	if x != nil && x.SendUin != nil {
		return *x.SendUin
	}
	return 0
}

func (x *CheckUrlReq) GetReqType() string {
	if x != nil && x.ReqType != nil {
		return *x.ReqType
	}
	return ""
}

func (x *CheckUrlReq) GetOriginalUrl() string {
	if x != nil && x.OriginalUrl != nil {
		return *x.OriginalUrl
	}
	return ""
}

func (x *CheckUrlReq) GetIsArk() bool {
	if x != nil && x.IsArk != nil {
		return *x.IsArk
	}
	return false
}

func (x *CheckUrlReq) GetArkName() string {
	if x != nil && x.ArkName != nil {
		return *x.ArkName
	}
	return ""
}

func (x *CheckUrlReq) GetIsFinish() bool {
	if x != nil && x.IsFinish != nil {
		return *x.IsFinish
	}
	return false
}

func (x *CheckUrlReq) GetSrcPlatform() uint32 {
	if x != nil && x.SrcPlatform != nil {
		return *x.SrcPlatform
	}
	return 0
}

func (x *CheckUrlReq) GetQua() string {
	if x != nil && x.Qua != nil {
		return *x.Qua
	}
	return ""
}

func (x *CheckUrlReq) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *CheckUrlReqItem) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CheckUrlReqItem) GetRefer() string {
	if x != nil && x.Refer != nil {
		return *x.Refer
	}
	return ""
}

func (x *CheckUrlReqItem) GetPlateform() string {
	if x != nil && x.Plateform != nil {
		return *x.Plateform
	}
	return ""
}

func (x *CheckUrlReqItem) GetQqPfTo() string {
	if x != nil && x.QqPfTo != nil {
		return *x.QqPfTo
	}
	return ""
}

func (x *CheckUrlReqItem) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CheckUrlReqItem) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *CheckUrlReqItem) GetChatid() uint64 {
	if x != nil && x.Chatid != nil {
		return *x.Chatid
	}
	return 0
}

func (x *CheckUrlReqItem) GetServiceType() uint64 {
	if x != nil && x.ServiceType != nil {
		return *x.ServiceType
	}
	return 0
}

func (x *CheckUrlReqItem) GetSendUin() uint64 {
	if x != nil && x.SendUin != nil {
		return *x.SendUin
	}
	return 0
}

func (x *CheckUrlReqItem) GetReqType() string {
	if x != nil && x.ReqType != nil {
		return *x.ReqType
	}
	return ""
}

func (x *CheckUrlReqItem) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *CheckUrlRsp) GetNextReqDuration() uint32 {
	if x != nil && x.NextReqDuration != nil {
		return *x.NextReqDuration
	}
	return 0
}

func (x *CheckUrlRsp) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *ReqBody) GetNotUseCache() int32 {
	if x != nil && x.NotUseCache != nil {
		return *x.NotUseCache
	}
	return 0
}

func (x *ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *RspBody) GetWording() string {
	if x != nil && x.Wording != nil {
		return *x.Wording
	}
	return ""
}

func (x *RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *UrlCheckResult) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *UrlCheckResult) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *UrlCheckResult) GetJumpResult() uint32 {
	if x != nil && x.JumpResult != nil {
		return *x.JumpResult
	}
	return 0
}

func (x *UrlCheckResult) GetJumpUrl() string {
	if x != nil && x.JumpUrl != nil {
		return *x.JumpUrl
	}
	return ""
}

func (x *UrlCheckResult) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *UrlCheckResult) GetSubLevel() uint32 {
	if x != nil && x.SubLevel != nil {
		return *x.SubLevel
	}
	return 0
}

func (x *UrlCheckResult) GetUmrtype() uint32 {
	if x != nil && x.Umrtype != nil {
		return *x.Umrtype
	}
	return 0
}

func (x *UrlCheckResult) GetRetFrom() uint32 {
	if x != nil && x.RetFrom != nil {
		return *x.RetFrom
	}
	return 0
}

func (x *UrlCheckResult) GetOperationBit() uint64 {
	if x != nil && x.OperationBit != nil {
		return *x.OperationBit
	}
	return 0
}

func (x *UrlCheckResult) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}
