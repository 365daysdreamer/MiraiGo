// Code generated by Proto2Go.Net. Only used for MiraiGo. DO NOT EDIT.
// Source: oidb0xe07.proto

package oidb0xe07

import (
	"github.com/pkg/errors"
	"go.dedis.ch/protobuf"
)

type (
	Coordinate struct {
		X *int32 `protobuf:"1,opt"`
		Y *int32 `protobuf:"2,opt"`
	}

	Language struct {
		Language     *string `protobuf:"1,opt"`
		LanguageDesc *string `protobuf:"2,opt"`
	}

	OCRReqBody struct {
		ImageUrl              *string `protobuf:"1,opt"`
		LanguageType          *string `protobuf:"2,opt"`
		Scene                 *string `protobuf:"3,opt"`
		OriginMd5             *string `protobuf:"10,opt"`
		AfterCompressMd5      *string `protobuf:"11,opt"`
		AfterCompressFileSize *uint32 `protobuf:"12,opt"`
		AfterCompressWeight   *uint32 `protobuf:"13,opt"`
		AfterCompressHeight   *uint32 `protobuf:"14,opt"`
		IsCut                 *bool   `protobuf:"15,opt"`
	}

	OCRRspBody struct {
		TextDetections           []*TextDetection `protobuf:"1"`
		Language                 *string          `protobuf:"2,opt"`
		RequestId                *string          `protobuf:"3,opt"`
		OcrLanguageList          []string         `protobuf:"101"`
		DstTranslateLanguageList []string         `protobuf:"102"`
		LanguageList             []*Language      `protobuf:"103"`
		AfterCompressWeight      *uint32          `protobuf:"111,opt"`
		AfterCompressHeight      *uint32          `protobuf:"112,opt"`
	}

	Polygon struct {
		Coordinates []*Coordinate `protobuf:"1"`
	}

	ReqBody struct {
		Version    *uint32     `protobuf:"1,opt"`
		Client     *uint32     `protobuf:"2,opt"`
		Entrance   *uint32     `protobuf:"3,opt"`
		OcrReqBody *OCRReqBody `protobuf:"10,opt"`
	}

	RspBody struct {
		RetCode    *int32      `protobuf:"1,opt"`
		ErrMsg     *string     `protobuf:"2,opt"`
		Wording    *string     `protobuf:"3,opt"`
		OcrRspBody *OCRRspBody `protobuf:"10,opt"`
	}

	TextDetection struct {
		DetectedText *string  `protobuf:"1,opt"`
		Confidence   *uint32  `protobuf:"2,opt"`
		Polygon      *Polygon `protobuf:"3,opt"`
		AdvancedInfo *string  `protobuf:"4,opt"`
	}
)

func (x *Coordinate) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Coordinate) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Coordinate) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *Language) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Language) GetLanguageDesc() string {
	if x != nil && x.LanguageDesc != nil {
		return *x.LanguageDesc
	}
	return ""
}

func (x *Language) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *OCRReqBody) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *OCRReqBody) GetLanguageType() string {
	if x != nil && x.LanguageType != nil {
		return *x.LanguageType
	}
	return ""
}

func (x *OCRReqBody) GetScene() string {
	if x != nil && x.Scene != nil {
		return *x.Scene
	}
	return ""
}

func (x *OCRReqBody) GetOriginMd5() string {
	if x != nil && x.OriginMd5 != nil {
		return *x.OriginMd5
	}
	return ""
}

func (x *OCRReqBody) GetAfterCompressMd5() string {
	if x != nil && x.AfterCompressMd5 != nil {
		return *x.AfterCompressMd5
	}
	return ""
}

func (x *OCRReqBody) GetAfterCompressFileSize() uint32 {
	if x != nil && x.AfterCompressFileSize != nil {
		return *x.AfterCompressFileSize
	}
	return 0
}

func (x *OCRReqBody) GetAfterCompressWeight() uint32 {
	if x != nil && x.AfterCompressWeight != nil {
		return *x.AfterCompressWeight
	}
	return 0
}

func (x *OCRReqBody) GetAfterCompressHeight() uint32 {
	if x != nil && x.AfterCompressHeight != nil {
		return *x.AfterCompressHeight
	}
	return 0
}

func (x *OCRReqBody) GetIsCut() bool {
	if x != nil && x.IsCut != nil {
		return *x.IsCut
	}
	return false
}

func (x *OCRReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *OCRRspBody) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *OCRRspBody) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *OCRRspBody) GetAfterCompressWeight() uint32 {
	if x != nil && x.AfterCompressWeight != nil {
		return *x.AfterCompressWeight
	}
	return 0
}

func (x *OCRRspBody) GetAfterCompressHeight() uint32 {
	if x != nil && x.AfterCompressHeight != nil {
		return *x.AfterCompressHeight
	}
	return 0
}

func (x *OCRRspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *Polygon) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *ReqBody) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ReqBody) GetClient() uint32 {
	if x != nil && x.Client != nil {
		return *x.Client
	}
	return 0
}

func (x *ReqBody) GetEntrance() uint32 {
	if x != nil && x.Entrance != nil {
		return *x.Entrance
	}
	return 0
}

func (x *ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *RspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *RspBody) GetErrMsg() string {
	if x != nil && x.ErrMsg != nil {
		return *x.ErrMsg
	}
	return ""
}

func (x *RspBody) GetWording() string {
	if x != nil && x.Wording != nil {
		return *x.Wording
	}
	return ""
}

func (x *RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *TextDetection) GetDetectedText() string {
	if x != nil && x.DetectedText != nil {
		return *x.DetectedText
	}
	return ""
}

func (x *TextDetection) GetConfidence() uint32 {
	if x != nil && x.Confidence != nil {
		return *x.Confidence
	}
	return 0
}

func (x *TextDetection) GetAdvancedInfo() string {
	if x != nil && x.AdvancedInfo != nil {
		return *x.AdvancedInfo
	}
	return ""
}

func (x *TextDetection) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}
