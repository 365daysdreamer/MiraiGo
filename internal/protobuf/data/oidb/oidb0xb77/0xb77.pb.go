// Code generated by yaprotoc. DO NOT EDIT.
// source: oidb\0xb77.proto

package oidb0xb77

import (
	"github.com/pkg/errors"
	"github.com/segmentio/encoding/proto"
)

type ArkJsonBody struct {
	JsonStr *string `protobuf:"bytes,10,opt"`
}

func (x *ArkJsonBody) GetJsonStr() string {
	if x != nil && x.JsonStr != nil {
		return *x.JsonStr
	}
	return ""
}

func (x *ArkJsonBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ArkMsgBody struct {
	App       *string `protobuf:"bytes,1,opt"`
	View      *string `protobuf:"bytes,2,opt"`
	Prompt    *string `protobuf:"bytes,3,opt"`
	Ver       *string `protobuf:"bytes,4,opt"`
	Desc      *string `protobuf:"bytes,5,opt"`
	FeatureId *uint32 `protobuf:"varint,6,opt"`
	Meta      *string `protobuf:"bytes,10,opt"`
	MetaUrl1  *string `protobuf:"bytes,11,opt"`
	MetaUrl2  *string `protobuf:"bytes,12,opt"`
	MetaUrl3  *string `protobuf:"bytes,13,opt"`
	MetaText1 *string `protobuf:"bytes,14,opt"`
	MetaText2 *string `protobuf:"bytes,15,opt"`
	MetaText3 *string `protobuf:"bytes,16,opt"`
	Config    *string `protobuf:"bytes,20,opt"`
}

func (x *ArkMsgBody) GetApp() string {
	if x != nil && x.App != nil {
		return *x.App
	}
	return ""
}

func (x *ArkMsgBody) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

func (x *ArkMsgBody) GetPrompt() string {
	if x != nil && x.Prompt != nil {
		return *x.Prompt
	}
	return ""
}

func (x *ArkMsgBody) GetVer() string {
	if x != nil && x.Ver != nil {
		return *x.Ver
	}
	return ""
}

func (x *ArkMsgBody) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *ArkMsgBody) GetFeatureId() uint32 {
	if x != nil && x.FeatureId != nil {
		return *x.FeatureId
	}
	return 0
}

func (x *ArkMsgBody) GetMeta() string {
	if x != nil && x.Meta != nil {
		return *x.Meta
	}
	return ""
}

func (x *ArkMsgBody) GetMetaUrl1() string {
	if x != nil && x.MetaUrl1 != nil {
		return *x.MetaUrl1
	}
	return ""
}

func (x *ArkMsgBody) GetMetaUrl2() string {
	if x != nil && x.MetaUrl2 != nil {
		return *x.MetaUrl2
	}
	return ""
}

func (x *ArkMsgBody) GetMetaUrl3() string {
	if x != nil && x.MetaUrl3 != nil {
		return *x.MetaUrl3
	}
	return ""
}

func (x *ArkMsgBody) GetMetaText1() string {
	if x != nil && x.MetaText1 != nil {
		return *x.MetaText1
	}
	return ""
}

func (x *ArkMsgBody) GetMetaText2() string {
	if x != nil && x.MetaText2 != nil {
		return *x.MetaText2
	}
	return ""
}

func (x *ArkMsgBody) GetMetaText3() string {
	if x != nil && x.MetaText3 != nil {
		return *x.MetaText3
	}
	return ""
}

func (x *ArkMsgBody) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

func (x *ArkMsgBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ArkV1MsgBody struct {
	App       *string         `protobuf:"bytes,1,opt"`
	View      *string         `protobuf:"bytes,2,opt"`
	Prompt    *string         `protobuf:"bytes,3,opt"`
	Ver       *string         `protobuf:"bytes,4,opt"`
	Desc      *string         `protobuf:"bytes,5,opt"`
	FeatureId *uint32         `protobuf:"varint,6,opt"`
	Meta      *string         `protobuf:"bytes,10,opt"`
	Items     []*TemplateItem `protobuf:"bytes,11,rep"`
	Config    *string         `protobuf:"bytes,20,opt"`
}

func (x *ArkV1MsgBody) GetApp() string {
	if x != nil && x.App != nil {
		return *x.App
	}
	return ""
}

func (x *ArkV1MsgBody) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

func (x *ArkV1MsgBody) GetPrompt() string {
	if x != nil && x.Prompt != nil {
		return *x.Prompt
	}
	return ""
}

func (x *ArkV1MsgBody) GetVer() string {
	if x != nil && x.Ver != nil {
		return *x.Ver
	}
	return ""
}

func (x *ArkV1MsgBody) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *ArkV1MsgBody) GetFeatureId() uint32 {
	if x != nil && x.FeatureId != nil {
		return *x.FeatureId
	}
	return 0
}

func (x *ArkV1MsgBody) GetMeta() string {
	if x != nil && x.Meta != nil {
		return *x.Meta
	}
	return ""
}

func (x *ArkV1MsgBody) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

func (x *ArkV1MsgBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ClientInfo struct {
	Platform           *uint32 `protobuf:"varint,1,opt"`
	SdkVersion         *string `protobuf:"bytes,2,opt"`
	AndroidPackageName *string `protobuf:"bytes,3,opt"`
	AndroidSignature   *string `protobuf:"bytes,4,opt"`
	IosBundleId        *string `protobuf:"bytes,5,opt"`
	PcSign             *string `protobuf:"bytes,6,opt"`
}

func (x *ClientInfo) GetPlatform() uint32 {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return 0
}

func (x *ClientInfo) GetSdkVersion() string {
	if x != nil && x.SdkVersion != nil {
		return *x.SdkVersion
	}
	return ""
}

func (x *ClientInfo) GetAndroidPackageName() string {
	if x != nil && x.AndroidPackageName != nil {
		return *x.AndroidPackageName
	}
	return ""
}

func (x *ClientInfo) GetAndroidSignature() string {
	if x != nil && x.AndroidSignature != nil {
		return *x.AndroidSignature
	}
	return ""
}

func (x *ClientInfo) GetIosBundleId() string {
	if x != nil && x.IosBundleId != nil {
		return *x.IosBundleId
	}
	return ""
}

func (x *ClientInfo) GetPcSign() string {
	if x != nil && x.PcSign != nil {
		return *x.PcSign
	}
	return ""
}

func (x *ClientInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ExtInfo struct {
	CustomFeatureid []uint32 `protobuf:"varint,11,rep"`
	ApnsWording     *string  `protobuf:"bytes,12,opt"`
	GroupSavedbFlag *uint32  `protobuf:"varint,13,opt"`
	ReceiverAppid   *uint32  `protobuf:"varint,14,opt"`
	Seq             *uint64  `protobuf:"varint,15,opt"`
	TagName         []byte   `protobuf:"bytes,17,opt"`
	MessageExt      []byte   `protobuf:"bytes,18,opt"`
}

func (x *ExtInfo) GetApnsWording() string {
	if x != nil && x.ApnsWording != nil {
		return *x.ApnsWording
	}
	return ""
}

func (x *ExtInfo) GetGroupSavedbFlag() uint32 {
	if x != nil && x.GroupSavedbFlag != nil {
		return *x.GroupSavedbFlag
	}
	return 0
}

func (x *ExtInfo) GetReceiverAppid() uint32 {
	if x != nil && x.ReceiverAppid != nil {
		return *x.ReceiverAppid
	}
	return 0
}

func (x *ExtInfo) GetSeq() uint64 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *ExtInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ImageInfo struct {
	Md5        *string `protobuf:"bytes,1,opt"`
	Uuid       *string `protobuf:"bytes,2,opt"`
	ImgType    *uint32 `protobuf:"varint,3,opt"`
	FileSize   *uint32 `protobuf:"varint,4,opt"`
	Width      *uint32 `protobuf:"varint,5,opt"`
	Height     *uint32 `protobuf:"varint,6,opt"`
	Original   *uint32 `protobuf:"varint,7,opt"`
	FileId     *uint32 `protobuf:"varint,101,opt"`
	ServerIp   *uint32 `protobuf:"varint,102,opt"`
	ServerPort *uint32 `protobuf:"varint,103,opt"`
}

func (x *ImageInfo) GetMd5() string {
	if x != nil && x.Md5 != nil {
		return *x.Md5
	}
	return ""
}

func (x *ImageInfo) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *ImageInfo) GetImgType() uint32 {
	if x != nil && x.ImgType != nil {
		return *x.ImgType
	}
	return 0
}

func (x *ImageInfo) GetFileSize() uint32 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *ImageInfo) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *ImageInfo) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *ImageInfo) GetOriginal() uint32 {
	if x != nil && x.Original != nil {
		return *x.Original
	}
	return 0
}

func (x *ImageInfo) GetFileId() uint32 {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return 0
}

func (x *ImageInfo) GetServerIp() uint32 {
	if x != nil && x.ServerIp != nil {
		return *x.ServerIp
	}
	return 0
}

func (x *ImageInfo) GetServerPort() uint32 {
	if x != nil && x.ServerPort != nil {
		return *x.ServerPort
	}
	return 0
}

func (x *ImageInfo) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type MiniAppMsgBody struct {
	MiniAppAppid *uint64 `protobuf:"varint,1,opt"`
	MiniAppPath  *string `protobuf:"bytes,2,opt"`
	WebPageUrl   *string `protobuf:"bytes,3,opt"`
	MiniAppType  *uint32 `protobuf:"varint,4,opt"`
	Title        *string `protobuf:"bytes,5,opt"`
	Desc         *string `protobuf:"bytes,6,opt"`
	JsonStr      *string `protobuf:"bytes,10,opt"`
}

func (x *MiniAppMsgBody) GetMiniAppAppid() uint64 {
	if x != nil && x.MiniAppAppid != nil {
		return *x.MiniAppAppid
	}
	return 0
}

func (x *MiniAppMsgBody) GetMiniAppPath() string {
	if x != nil && x.MiniAppPath != nil {
		return *x.MiniAppPath
	}
	return ""
}

func (x *MiniAppMsgBody) GetWebPageUrl() string {
	if x != nil && x.WebPageUrl != nil {
		return *x.WebPageUrl
	}
	return ""
}

func (x *MiniAppMsgBody) GetMiniAppType() uint32 {
	if x != nil && x.MiniAppType != nil {
		return *x.MiniAppType
	}
	return 0
}

func (x *MiniAppMsgBody) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MiniAppMsgBody) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *MiniAppMsgBody) GetJsonStr() string {
	if x != nil && x.JsonStr != nil {
		return *x.JsonStr
	}
	return ""
}

func (x *MiniAppMsgBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ReqBody struct {
	AppId          *uint64         `protobuf:"varint,1,opt"`
	AppType        *uint32         `protobuf:"varint,2,opt"`
	Style          *uint32         `protobuf:"varint,3,opt"`
	SenderUin      *uint64         `protobuf:"varint,4,opt"`
	ClientInfo     *ClientInfo     `protobuf:"bytes,5,opt"`
	TextMsg        *string         `protobuf:"bytes,6,opt"`
	ExtInfo        *ExtInfo        `protobuf:"bytes,7,opt"`
	SendType       *uint32         `protobuf:"varint,10,opt"`
	RecvUin        *uint64         `protobuf:"varint,11,opt"`
	RichMsgBody    *RichMsgBody    `protobuf:"bytes,12,opt"`
	ArkMsgBody     *ArkMsgBody     `protobuf:"bytes,13,opt"`
	RecvOpenid     *string         `protobuf:"bytes,14,opt"`
	Arkv1MsgBody   *ArkV1MsgBody   `protobuf:"bytes,15,opt"`
	ArkJsonBody    *ArkJsonBody    `protobuf:"bytes,16,opt"`
	XmlMsgBody     *XmlMsgBody     `protobuf:"bytes,17,opt"`
	MiniAppMsgBody *MiniAppMsgBody `protobuf:"bytes,18,opt"`
	RecvGuildId    *uint64         `protobuf:"varint,19,opt"`
}

func (x *ReqBody) GetAppId() uint64 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *ReqBody) GetAppType() uint32 {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return 0
}

func (x *ReqBody) GetStyle() uint32 {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return 0
}

func (x *ReqBody) GetSenderUin() uint64 {
	if x != nil && x.SenderUin != nil {
		return *x.SenderUin
	}
	return 0
}

func (x *ReqBody) GetTextMsg() string {
	if x != nil && x.TextMsg != nil {
		return *x.TextMsg
	}
	return ""
}

func (x *ReqBody) GetSendType() uint32 {
	if x != nil && x.SendType != nil {
		return *x.SendType
	}
	return 0
}

func (x *ReqBody) GetRecvUin() uint64 {
	if x != nil && x.RecvUin != nil {
		return *x.RecvUin
	}
	return 0
}

func (x *ReqBody) GetRecvOpenid() string {
	if x != nil && x.RecvOpenid != nil {
		return *x.RecvOpenid
	}
	return ""
}

func (x *ReqBody) GetRecvGuildId() uint64 {
	if x != nil && x.RecvGuildId != nil {
		return *x.RecvGuildId
	}
	return 0
}

func (x *ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type RichMsgBody struct {
	UsingArk   *bool      `protobuf:"varint,1,opt"`
	Title      *string    `protobuf:"bytes,10,opt"`
	Summary    *string    `protobuf:"bytes,11,opt"`
	Brief      *string    `protobuf:"bytes,12,opt"`
	Url        *string    `protobuf:"bytes,13,opt"`
	PictureUrl *string    `protobuf:"bytes,14,opt"`
	Action     *string    `protobuf:"bytes,15,opt"`
	MusicUrl   *string    `protobuf:"bytes,16,opt"`
	ImageInfo  *ImageInfo `protobuf:"bytes,21,opt"`
}

func (x *RichMsgBody) GetUsingArk() bool {
	if x != nil && x.UsingArk != nil {
		return *x.UsingArk
	}
	return false
}

func (x *RichMsgBody) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *RichMsgBody) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *RichMsgBody) GetBrief() string {
	if x != nil && x.Brief != nil {
		return *x.Brief
	}
	return ""
}

func (x *RichMsgBody) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *RichMsgBody) GetPictureUrl() string {
	if x != nil && x.PictureUrl != nil {
		return *x.PictureUrl
	}
	return ""
}

func (x *RichMsgBody) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *RichMsgBody) GetMusicUrl() string {
	if x != nil && x.MusicUrl != nil {
		return *x.MusicUrl
	}
	return ""
}

func (x *RichMsgBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type RspBody struct {
	Wording    *string `protobuf:"bytes,1,opt"`
	JumpResult *uint32 `protobuf:"varint,2,opt"`
	JumpUrl    *string `protobuf:"bytes,3,opt"`
	Level      *uint32 `protobuf:"varint,4,opt"`
	SubLevel   *uint32 `protobuf:"varint,5,opt"`
	DevelopMsg *string `protobuf:"bytes,6,opt"`
}

func (x *RspBody) GetWording() string {
	if x != nil && x.Wording != nil {
		return *x.Wording
	}
	return ""
}

func (x *RspBody) GetJumpResult() uint32 {
	if x != nil && x.JumpResult != nil {
		return *x.JumpResult
	}
	return 0
}

func (x *RspBody) GetJumpUrl() string {
	if x != nil && x.JumpUrl != nil {
		return *x.JumpUrl
	}
	return ""
}

func (x *RspBody) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *RspBody) GetSubLevel() uint32 {
	if x != nil && x.SubLevel != nil {
		return *x.SubLevel
	}
	return 0
}

func (x *RspBody) GetDevelopMsg() string {
	if x != nil && x.DevelopMsg != nil {
		return *x.DevelopMsg
	}
	return ""
}

func (x *RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type TemplateItem struct {
	Key   *string `protobuf:"bytes,1,opt"`
	Type  *uint32 `protobuf:"varint,2,opt"`
	Value *string `protobuf:"bytes,3,opt"`
}

func (x *TemplateItem) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *TemplateItem) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *TemplateItem) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *TemplateItem) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type XmlMsgBody struct {
	ServiceId *uint32 `protobuf:"varint,11,opt"`
	Xml       *string `protobuf:"bytes,12,opt"`
}

func (x *XmlMsgBody) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *XmlMsgBody) GetXml() string {
	if x != nil && x.Xml != nil {
		return *x.Xml
	}
	return ""
}

func (x *XmlMsgBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}
