// Code generated by yaprotoc. DO NOT EDIT.
// source: oidb/0x6d8.proto

package oidb0x6d8

import (
	group_file_common "github.com/Mrs4s/MiraiGo/internal/protobuf/data/group_file_common"
	"github.com/pkg/errors"
	"github.com/segmentio/encoding/proto"
)

type FileTimeStamp struct {
	UploadTime *uint32 `protobuf:"varint,1,opt"`
	FileId     *string `protobuf:"bytes,2,opt"`
}

func (x *FileTimeStamp) GetUploadTime() uint32 {
	if x != nil && x.UploadTime != nil {
		return *x.UploadTime
	}
	return 0
}

func (x *FileTimeStamp) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *FileTimeStamp) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFileCountReqBody struct {
	GroupCode *uint64 `protobuf:"varint,1,opt"`
	AppId     *uint32 `protobuf:"varint,2,opt"`
	BusId     *uint32 `protobuf:"varint,3,opt"`
}

func (x *GetFileCountReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetFileCountReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetFileCountReqBody) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *GetFileCountReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFileCountRspBody struct {
	RetCode       *int32  `protobuf:"varint,1,opt"`
	RetMsg        *string `protobuf:"bytes,2,opt"`
	ClientWording *string `protobuf:"bytes,3,opt"`
	AllFileCount  *uint32 `protobuf:"varint,4,opt"`
	FileTooMany   *bool   `protobuf:"varint,5,opt"`
	LimitCount    *uint32 `protobuf:"varint,6,opt"`
	IsFull        *bool   `protobuf:"varint,7,opt"`
}

func (x *GetFileCountRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetFileCountRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetFileCountRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetFileCountRspBody) GetAllFileCount() uint32 {
	if x != nil && x.AllFileCount != nil {
		return *x.AllFileCount
	}
	return 0
}

func (x *GetFileCountRspBody) GetFileTooMany() bool {
	if x != nil && x.FileTooMany != nil {
		return *x.FileTooMany
	}
	return false
}

func (x *GetFileCountRspBody) GetLimitCount() uint32 {
	if x != nil && x.LimitCount != nil {
		return *x.LimitCount
	}
	return 0
}

func (x *GetFileCountRspBody) GetIsFull() bool {
	if x != nil && x.IsFull != nil {
		return *x.IsFull
	}
	return false
}

func (x *GetFileCountRspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFileInfoReqBody struct {
	GroupCode *uint64 `protobuf:"varint,1,opt"`
	AppId     *uint32 `protobuf:"varint,2,opt"`
	BusId     *uint32 `protobuf:"varint,3,opt"`
	FileId    *string `protobuf:"bytes,4,opt"`
	FieldFlag *uint32 `protobuf:"varint,5,opt"`
}

func (x *GetFileInfoReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetFileInfoReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetFileInfoReqBody) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *GetFileInfoReqBody) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *GetFileInfoReqBody) GetFieldFlag() uint32 {
	if x != nil && x.FieldFlag != nil {
		return *x.FieldFlag
	}
	return 0
}

func (x *GetFileInfoReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFileInfoRspBody struct {
	RetCode       *int32                      `protobuf:"varint,1,opt"`
	RetMsg        *string                     `protobuf:"bytes,2,opt"`
	ClientWording *string                     `protobuf:"bytes,3,opt"`
	FileInfo      *group_file_common.FileInfo `protobuf:"bytes,4,opt"`
}

func (x *GetFileInfoRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetFileInfoRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetFileInfoRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetFileInfoRspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFileListReqBody struct {
	GroupCode           *uint64        `protobuf:"varint,1,opt"`
	AppId               *uint32        `protobuf:"varint,2,opt"`
	FolderId            *string        `protobuf:"bytes,3,opt"`
	StartTimestamp      *FileTimeStamp `protobuf:"bytes,4,opt"`
	FileCount           *uint32        `protobuf:"varint,5,opt"`
	MaxTimestamp        *FileTimeStamp `protobuf:"bytes,6,opt"`
	AllFileCount        *uint32        `protobuf:"varint,7,opt"`
	ReqFrom             *uint32        `protobuf:"varint,8,opt"`
	SortBy              *uint32        `protobuf:"varint,9,opt"`
	FilterCode          *uint32        `protobuf:"varint,10,opt"`
	Uin                 *uint64        `protobuf:"varint,11,opt"`
	FieldFlag           *uint32        `protobuf:"varint,12,opt"`
	StartIndex          *uint32        `protobuf:"varint,13,opt"`
	Context             []byte         `protobuf:"bytes,14,opt"`
	ClientVersion       *uint32        `protobuf:"varint,15,opt"`
	WhiteList           *uint32        `protobuf:"varint,16,opt"`
	SortOrder           *uint32        `protobuf:"varint,17,opt"`
	ShowOnlinedocFolder *uint32        `protobuf:"varint,18,opt"`
}

func (x *GetFileListReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetFileListReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetFileListReqBody) GetFolderId() string {
	if x != nil && x.FolderId != nil {
		return *x.FolderId
	}
	return ""
}

func (x *GetFileListReqBody) GetFileCount() uint32 {
	if x != nil && x.FileCount != nil {
		return *x.FileCount
	}
	return 0
}

func (x *GetFileListReqBody) GetAllFileCount() uint32 {
	if x != nil && x.AllFileCount != nil {
		return *x.AllFileCount
	}
	return 0
}

func (x *GetFileListReqBody) GetReqFrom() uint32 {
	if x != nil && x.ReqFrom != nil {
		return *x.ReqFrom
	}
	return 0
}

func (x *GetFileListReqBody) GetSortBy() uint32 {
	if x != nil && x.SortBy != nil {
		return *x.SortBy
	}
	return 0
}

func (x *GetFileListReqBody) GetFilterCode() uint32 {
	if x != nil && x.FilterCode != nil {
		return *x.FilterCode
	}
	return 0
}

func (x *GetFileListReqBody) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *GetFileListReqBody) GetFieldFlag() uint32 {
	if x != nil && x.FieldFlag != nil {
		return *x.FieldFlag
	}
	return 0
}

func (x *GetFileListReqBody) GetStartIndex() uint32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return 0
}

func (x *GetFileListReqBody) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *GetFileListReqBody) GetWhiteList() uint32 {
	if x != nil && x.WhiteList != nil {
		return *x.WhiteList
	}
	return 0
}

func (x *GetFileListReqBody) GetSortOrder() uint32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *GetFileListReqBody) GetShowOnlinedocFolder() uint32 {
	if x != nil && x.ShowOnlinedocFolder != nil {
		return *x.ShowOnlinedocFolder
	}
	return 0
}

func (x *GetFileListReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFileListRspBody struct {
	RetCode       *int32                     `protobuf:"varint,1,opt"`
	RetMsg        *string                    `protobuf:"bytes,2,opt"`
	ClientWording *string                    `protobuf:"bytes,3,opt"`
	IsEnd         *bool                      `protobuf:"varint,4,opt"`
	ItemList      []*GetFileListRspBody_Item `protobuf:"bytes,5,rep"`
	MaxTimestamp  *FileTimeStamp             `protobuf:"bytes,6,opt"`
	AllFileCount  *uint32                    `protobuf:"varint,7,opt"`
	FilterCode    *uint32                    `protobuf:"varint,8,opt"`
	SafeCheckFlag *bool                      `protobuf:"varint,11,opt"`
	SafeCheckRes  *uint32                    `protobuf:"varint,12,opt"`
	NextIndex     *uint32                    `protobuf:"varint,13,opt"`
	Context       []byte                     `protobuf:"bytes,14,opt"`
	Role          *uint32                    `protobuf:"varint,15,opt"`
	OpenFlag      *uint32                    `protobuf:"varint,16,opt"`
}

func (x *GetFileListRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetFileListRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetFileListRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetFileListRspBody) GetIsEnd() bool {
	if x != nil && x.IsEnd != nil {
		return *x.IsEnd
	}
	return false
}

func (x *GetFileListRspBody) GetAllFileCount() uint32 {
	if x != nil && x.AllFileCount != nil {
		return *x.AllFileCount
	}
	return 0
}

func (x *GetFileListRspBody) GetFilterCode() uint32 {
	if x != nil && x.FilterCode != nil {
		return *x.FilterCode
	}
	return 0
}

func (x *GetFileListRspBody) GetSafeCheckFlag() bool {
	if x != nil && x.SafeCheckFlag != nil {
		return *x.SafeCheckFlag
	}
	return false
}

func (x *GetFileListRspBody) GetSafeCheckRes() uint32 {
	if x != nil && x.SafeCheckRes != nil {
		return *x.SafeCheckRes
	}
	return 0
}

func (x *GetFileListRspBody) GetNextIndex() uint32 {
	if x != nil && x.NextIndex != nil {
		return *x.NextIndex
	}
	return 0
}

func (x *GetFileListRspBody) GetRole() uint32 {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return 0
}

func (x *GetFileListRspBody) GetOpenFlag() uint32 {
	if x != nil && x.OpenFlag != nil {
		return *x.OpenFlag
	}
	return 0
}

func (x *GetFileListRspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFilePreviewReqBody struct {
	GroupCode *uint64 `protobuf:"varint,1,opt"`
	AppId     *uint32 `protobuf:"varint,2,opt"`
	BusId     *uint32 `protobuf:"varint,3,opt"`
	FileId    *string `protobuf:"bytes,4,opt"`
}

func (x *GetFilePreviewReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetFilePreviewReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetFilePreviewReqBody) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *GetFilePreviewReqBody) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *GetFilePreviewReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFilePreviewRspBody struct {
	RetCode          *int32  `protobuf:"varint,1,opt"`
	RetMsg           *string `protobuf:"bytes,2,opt"`
	ClientWording    *string `protobuf:"bytes,3,opt"`
	ServerIp         *uint32 `protobuf:"varint,4,opt"`
	ServerPort       *uint32 `protobuf:"varint,5,opt"`
	DownloadDns      *string `protobuf:"bytes,6,opt"`
	DownloadUrl      []byte  `protobuf:"bytes,7,opt"`
	CookieVal        *string `protobuf:"bytes,8,opt"`
	ReservedField    []byte  `protobuf:"bytes,9,opt"`
	DownloadDnsHttps []byte  `protobuf:"bytes,10,opt"`
	PreviewPortHttps *uint32 `protobuf:"varint,11,opt"`
}

func (x *GetFilePreviewRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetFilePreviewRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetFilePreviewRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetFilePreviewRspBody) GetServerIp() uint32 {
	if x != nil && x.ServerIp != nil {
		return *x.ServerIp
	}
	return 0
}

func (x *GetFilePreviewRspBody) GetServerPort() uint32 {
	if x != nil && x.ServerPort != nil {
		return *x.ServerPort
	}
	return 0
}

func (x *GetFilePreviewRspBody) GetDownloadDns() string {
	if x != nil && x.DownloadDns != nil {
		return *x.DownloadDns
	}
	return ""
}

func (x *GetFilePreviewRspBody) GetCookieVal() string {
	if x != nil && x.CookieVal != nil {
		return *x.CookieVal
	}
	return ""
}

func (x *GetFilePreviewRspBody) GetPreviewPortHttps() uint32 {
	if x != nil && x.PreviewPortHttps != nil {
		return *x.PreviewPortHttps
	}
	return 0
}

func (x *GetFilePreviewRspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetSpaceReqBody struct {
	GroupCode *uint64 `protobuf:"varint,1,opt"`
	AppId     *uint32 `protobuf:"varint,2,opt"`
}

func (x *GetSpaceReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetSpaceReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetSpaceReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetSpaceRspBody struct {
	RetCode       *int32  `protobuf:"varint,1,opt"`
	RetMsg        *string `protobuf:"bytes,2,opt"`
	ClientWording *string `protobuf:"bytes,3,opt"`
	TotalSpace    *uint64 `protobuf:"varint,4,opt"`
	UsedSpace     *uint64 `protobuf:"varint,5,opt"`
	AllUpload     *bool   `protobuf:"varint,6,opt"`
}

func (x *GetSpaceRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetSpaceRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetSpaceRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetSpaceRspBody) GetTotalSpace() uint64 {
	if x != nil && x.TotalSpace != nil {
		return *x.TotalSpace
	}
	return 0
}

func (x *GetSpaceRspBody) GetUsedSpace() uint64 {
	if x != nil && x.UsedSpace != nil {
		return *x.UsedSpace
	}
	return 0
}

func (x *GetSpaceRspBody) GetAllUpload() bool {
	if x != nil && x.AllUpload != nil {
		return *x.AllUpload
	}
	return false
}

func (x *GetSpaceRspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type GetFileListRspBody_Item struct {
	Type       *uint32                       `protobuf:"varint,1,opt"`
	FolderInfo *group_file_common.FolderInfo `protobuf:"bytes,2,opt"`
	FileInfo   *group_file_common.FileInfo   `protobuf:"bytes,3,opt"`
}

func (x *GetFileListRspBody_Item) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *GetFileListRspBody_Item) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type ReqBody struct {
	FileInfoReq     *GetFileInfoReqBody    `protobuf:"bytes,1,opt"`
	FileListInfoReq *GetFileListReqBody    `protobuf:"bytes,2,opt"`
	GroupFileCntReq *GetFileCountReqBody   `protobuf:"bytes,3,opt"`
	GroupSpaceReq   *GetSpaceReqBody       `protobuf:"bytes,4,opt"`
	FilePreviewReq  *GetFilePreviewReqBody `protobuf:"bytes,5,opt"`
}

func (x *ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}

type RspBody struct {
	FileInfoRsp     *GetFileInfoRspBody    `protobuf:"bytes,1,opt"`
	FileListInfoRsp *GetFileListRspBody    `protobuf:"bytes,2,opt"`
	GroupFileCntRsp *GetFileCountRspBody   `protobuf:"bytes,3,opt"`
	GroupSpaceRsp   *GetSpaceRspBody       `protobuf:"bytes,4,opt"`
	FilePreviewRsp  *GetFilePreviewRspBody `protobuf:"bytes,5,opt"`
}

func (x *RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil message")
	}
	return proto.Marshal(x)
}
