// Code generated by Proto2Go.Net. Only used for MiraiGo. DO NOT EDIT.
// Source: oidb0x8a7.proto

package oidb0x8a7

import (
	"github.com/pkg/errors"
	"go.dedis.ch/protobuf"
)

type (
	ReqBody struct {
		SubCmd                    *uint32 `protobuf:"1,opt"`
		LimitIntervalTypeForUin   *uint32 `protobuf:"2,opt"`
		LimitIntervalTypeForGroup *uint32 `protobuf:"3,opt"`
		Uin                       *uint64 `protobuf:"4,opt"`
		GroupCode                 *uint64 `protobuf:"5,opt"`
	}

	RspBody struct {
		CanAtAll                 *bool   `protobuf:"1,opt"`
		RemainAtAllCountForUin   *uint32 `protobuf:"2,opt"`
		RemainAtAllCountForGroup *uint32 `protobuf:"3,opt"`
		PromptMsg1               []byte  `protobuf:"4,opt"`
		PromptMsg2               []byte  `protobuf:"5,opt"`
	}
)

func (x *ReqBody) GetSubCmd() uint32 {
	if x != nil && x.SubCmd != nil {
		return *x.SubCmd
	}
	return 0
}

func (x *ReqBody) GetLimitIntervalTypeForUin() uint32 {
	if x != nil && x.LimitIntervalTypeForUin != nil {
		return *x.LimitIntervalTypeForUin
	}
	return 0
}

func (x *ReqBody) GetLimitIntervalTypeForGroup() uint32 {
	if x != nil && x.LimitIntervalTypeForGroup != nil {
		return *x.LimitIntervalTypeForGroup
	}
	return 0
}

func (x *ReqBody) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *RspBody) GetCanAtAll() bool {
	if x != nil && x.CanAtAll != nil {
		return *x.CanAtAll
	}
	return false
}

func (x *RspBody) GetRemainAtAllCountForUin() uint32 {
	if x != nil && x.RemainAtAllCountForUin != nil {
		return *x.RemainAtAllCountForUin
	}
	return 0
}

func (x *RspBody) GetRemainAtAllCountForGroup() uint32 {
	if x != nil && x.RemainAtAllCountForGroup != nil {
		return *x.RemainAtAllCountForGroup
	}
	return 0
}

func (x *RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}
