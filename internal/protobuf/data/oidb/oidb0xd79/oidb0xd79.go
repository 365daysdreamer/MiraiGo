// Code generated by Proto2Go.Net. Only used for MiraiGo. DO NOT EDIT.
// Source: oidb0xd79.proto

package oidb0xd79

import (
	"github.com/pkg/errors"
	"go.dedis.ch/protobuf"
)

type (
	ReqBody struct {
		Seq          *uint64 `protobuf:"1,opt"`
		Uin          *uint64 `protobuf:"2,opt"`
		CompressFlag *uint32 `protobuf:"3,opt"`
		Content      []byte  `protobuf:"4,opt"`
		SenderUin    *uint64 `protobuf:"5,opt"`
		Qua          []byte  `protobuf:"6,opt"`
		WordExt      []byte  `protobuf:"7,opt"`
	}

	RspBody struct {
		Ret          *uint32  `protobuf:"1,opt"`
		Seq          *uint64  `protobuf:"2,opt"`
		Uin          *uint64  `protobuf:"3,opt"`
		CompressFlag *uint32  `protobuf:"4,opt"`
		Content      *Content `protobuf:"5,opt"`
	}

	Content struct {
		SliceContent [][]byte `protobuf:"1"`
	}
)

func (x *ReqBody) GetSeq() uint64 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *ReqBody) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ReqBody) GetCompressFlag() uint32 {
	if x != nil && x.CompressFlag != nil {
		return *x.CompressFlag
	}
	return 0
}

func (x *ReqBody) GetSenderUin() uint64 {
	if x != nil && x.SenderUin != nil {
		return *x.SenderUin
	}
	return 0
}

func (x *ReqBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *RspBody) GetRet() uint32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspBody) GetSeq() uint64 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *RspBody) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *RspBody) GetCompressFlag() uint32 {
	if x != nil && x.CompressFlag != nil {
		return *x.CompressFlag
	}
	return 0
}

func (x *RspBody) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}

func (x *Content) Marshal() ([]byte, error) {
	if x == nil {
		return nil, errors.New("nil pointer error")
	}
	return protobuf.Encode(x)
}
